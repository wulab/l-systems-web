(define make-state list)
(define xpos car)
(define ypos cadr)
(define heading caddr)

(define (make-turtle-on-plane name w h)
  (define plane (js-new (js-eval "Plane") name w h))
  (define turtle (js-new (js-eval "Turtle") plane))
  (define (state)
    (let* ((s (js-ref turtle "state"))
           (x (js-ref s "x"))
           (y (js-ref s "y"))
           (a (js-ref s "a")))
      (make-state x y a)))
  (define (set-state s)
    (js-invoke turtle "setState" (xpos s) (ypos s) (heading s)))
  (define (interpret word d a)
    (define (respond alphabet)
      (cond ((eq? alphabet 'F) (js-invoke turtle "forward" d))
            ((eq? alphabet '+) (js-invoke turtle "turnRight" a))
            ((eq? alphabet '-) (js-invoke turtle "turnLeft" a))
            (else 'ignored)))
    (for-each respond word)
    (js-invoke turtle "draw"))
  (define (dispatch m)
    (cond ((eq? m 'state) state)
          ((eq? m 'set-state) set-state)
          ((eq? m 'interpret) interpret)
          (else (error "Unknown request"))))
  dispatch)
